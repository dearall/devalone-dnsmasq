# File managed by puppet

# Configuration file for dnsmasq.
#
# Format is one option per line, legal options are the same
# as the long options legal on the command line. See
# "/usr/sbin/dnsmasq --help" or "man 8 dnsmasq" for details.

# Listen on this specific port instead of the standard DNS port
# (53). Setting this to zero completely disables DNS function,
# leaving only DHCP and/or TFTP.
<% if @port then -%>
port=<%= @port %>
<%- else -%>
#port=5353
<%- end -%>

# Never forward plain names (without a dot or domain part)
<% if @domain_needed -%>
domain-needed
<%- else -%>
#domain-needed
<%- end -%>

# Never forward addresses in the non-routed address spaces.
# 不转发在非路由地址空间(non-routed address spaces)中的地址
<% if @bogus_priv -%>
bogus-priv
<%- else -%>
#bogus-priv
<% end -%>

# Uncomment these to enable DNSSEC validation and caching:
# (Requires dnsmasq to be built with DNSSEC option.)
<% if @conf_file -%>
conf-file=<%= @conf_file  %>
<%- else -%>
#conf-file=%%PREFIX%%/share/dnsmasq/trust-anchors.conf
<%- end -%>

<% if @dnssec -%>
dnssec
<%- else -%>
#dnssec
<%- end -%>

# Replies which are not DNSSEC signed may be legitimate, because the domain
# is unsigned, or may be forgeries. Setting this option tells dnsmasq to
# check that an unsigned reply is OK, by finding a secure proof that a DS
# record somewhere between the root and the domain does not exist.
# The cost of setting this is that even queries in unsigned domains will need
# one or more extra DNS queries to verify.
<% if @dnssec_check_unsigned -%>
dnssec-check-unsigned
<%- else -%>
#dnssec-check-unsigned
<%- end -%>

# Uncomment this to filter useless windows-originated DNS requests
# which can trigger dial-on-demand links needlessly.
# Note that (amongst other things) this blocks all SRV requests,
# so don't use it if you use eg Kerberos, SIP, XMMP or Google-talk.
# This option only affects forwarding, SRV records originating for
# dnsmasq (via srv-host= lines) are not suppressed by it.
<% if @filterwin2k -%>
filterwin2k
<%- else -%>
#filterwin2k
<%- end -%>

# Change this line if you want dns to get its upstream servers from
# somewhere other that /etc/resolv.conf
# 指定 resolv-file 文件路径，默认/etc/resolv.conf
<% if @resolv_file -%>
resolv-file=<%= @resolv_file %>
<%- end -%>

# By  default,  dnsmasq  will  send queries to any of the upstream
# servers it knows about and tries to favour servers to are  known
# to  be  up.  Uncommenting this forces dnsmasq to try each query
# with  each  server  strictly  in  the  order  they   appear   in
# /etc/resolv.conf
# 严格按照resolv.conf中的顺序进行查找
<% if @strict_order -%>
strict-order
<% else -%>
#strict-order
<%- end -%>

# If you don't want dnsmasq to read /etc/resolv.conf or any other
# file, getting its servers from this file instead (see below), then
# uncomment this.
# man --no-resolv: Don't read /etc/resolv.conf. Get upstream servers only from the command line or the dnsmasq configuration file.
# 不读取 resolv-file 来确定上游服务器
<% if @no_resolv -%>
no-resolv
<%- else -%>
#no-resolv
<%- end -%>

# If you don't want dnsmasq to poll /etc/resolv.conf or other resolv
# files for changes and re-read them then uncomment this.
# 不检测 /etc/resolv.conf 的变化
<% if @no_poll -%>
no-poll
<%- else -%>
#no-poll
<%- end -%>

# Add other name servers here, with domain specs if they are for
# non-public domains.
<% if @other_name_servers && !@other_name_servers.empty? then -%>
<% @other_name_servers.each do |ns| -%>
server=<%= ns %>
<% end -%>
<% else -%>
#server=/example.com/192.168.0.1
<% end -%>

# Example of routing PTR queries to nameservers: this will send all
# address->name queries for 192.168.3/24 to nameserver 10.1.2.3
<% if @ptr_nameservers && !@ptr_nameservers.empty? then -%>
<% @ptr_nameservers.each do |ns| -%>
server=<%= ns %>
<% end -%>
<% else -%>
#server=/3.168.192.in-addr.arpa/10.1.2.3
<% end -%>

# Add local-only domains here, queries in these domains are answered
# from /etc/hosts or DHCP only.
<% if @local_only_domains && !@local_only_domains.empty? then -%>
<% @local_only_domains.each do |ns| -%>
local=<%= ns %>
<% end -%>
<% else -%>
#local=/local-example.org/
<% end -%>

# Add domains which you want to force to an IP address here.
# The example below send any host in double-click.net to a local
# web-server.
#address=/double-click.net/127.0.0.1

# --address (and --server) work with IPv6 addresses too.
#address=/www.thekelleys.org.uk/fe80::20d:60ff:fe36:f83
<% if @domains_force_to_ip && !@domains_force_to_ip.empty? then -%>
<% @domains_force_to_ip.each do |item| -%>
address=<%= item %>
<% end -%>
<% end -%>

# Add the IPs of all queries to yahoo.com, google.com, and their
# subdomains to the vpn and search ipsets:
<% if @ipset then -%>
ipset=<%= @ipset%>
<% else -%>
#ipset=/yahoo.com/google.com/vpn,search
<% end -%>

# You can control how dnsmasq talks to a server: this forces
# queries to 10.1.2.3 to be routed via eth1
<% if @queries_via_eth && !@queries_via_eth.empty? then -%>
<% @queries_via_eth.each do |item| -%>
server=<%= item %>
<% end -%>
<% else -%>
# server=10.1.2.3@eth1
<% end -%>

# and this sets the source (ie local) address used to talk to
# 10.1.2.3 to 192.168.1.1 port 55 (there must be an interface with that
# IP on the machine, obviously).
<% if @queries_via_ip && !@queries_via_ip.empty? then -%>
<% @queries_via_ip.each do |item| -%>
server=<%= item %>
<% end -%>
<% else -%>
# server=10.1.2.3@192.168.1.1#55
<% end -%>

# If you want dnsmasq to change uid and gid to something other
# than the default, edit the following lines.
<% if @user -%>
user=<%= @user -%>
<%- else -%>
#user=
<%- end -%>
<% if @group %>
group=<%= @group -%>
<%- else -%>
#group=
<%- end -%>

# If you want dnsmasq to listen for DHCP and DNS requests only on
# specified interfaces (and the loopback) give the name of the
# interface (eg eth0) here.
<% if @interfaces && !@interfaces.empty? then -%>
<% @interfaces.each do |eth| -%>
interface=<%= eth %>
<% end -%>
<% else -%>
#interface=eth1
<% end -%>
# Or you can specify which interface _not_ to listen on
<% if @except_interfaces && !@except_interfaces.empty? then -%>
<% @except_interfaces.each do |eth| -%>
except-interface=<%= eth %>
<% end -%>
<% else -%>
#except-interface=
<% end -%>
# Or which to listen on by address (remember to include 127.0.0.1 if
# you use this.)
<% if @listen_addresses && !@listen_addresses.empty? then -%>
<% @listen_addresses.each do |addr| -%>
listen-address=<%= addr %>
<% end -%>
<% else -%>
#listen-address=192.168.0.2,127.0.0.1
<% end -%>
# If you want dnsmasq to provide only DNS service on an interface,
# configure it as shown above, and then use the following line to
# disable DHCP and TFTP on it.
<% if @no_dhcp_interfaces && !@no_dhcp_interfaces.empty? then -%>
<% @no_dhcp_interfaces.each do |eth| -%>
no-dhcp-interface=<%= eth %>
<% end -%>
<% else -%>
#no-dhcp-interface=
<% end -%>

# On systems which support it, dnsmasq binds the wildcard address,
# even when it is listening on only some interfaces. It then discards
# requests that it shouldn't reply to. This has the advantage of
# working even when interfaces come and go and change address. If you
# want dnsmasq to really bind only the interfaces it is listening on,
# uncomment this option. About the only time you may need this is when
# running another nameserver on the same machine.
<% if @bind_interfaces -%>
bind-interfaces
<%- else -%>
#bind-interfaces
<%- end -%>

# If you don't want dnsmasq to read /etc/hosts, uncomment the
# following line.
<% if @no_hosts -%>
no-hosts
<%- else -%>
#no-hosts
<%- end -%>
# or if you want it to read another file, as well as /etc/hosts, use
# this.
<% if @addn_hosts && !@addn_hosts.empty? then -%>
<% @addn_hosts.each do |file| -%>
addn-hosts=<%= file %>
<% end -%>
<% else -%>
#addn-hosts=/etc/banner_add_hosts
<% end -%>

# Set this (and domain: see below) if you want to have a domain
# automatically added to simple names in a hosts-file.
<% if @expand_hosts -%>
expand-hosts
<%- else -%>
#expand-hosts
<%- end -%>

# Set the domain for dnsmasq. this is optional, but if it is set, it
# does the following things.
# 1) Allows DHCP hosts to have fully qualified domain names, as long
#     as the domain part matches this setting.
# 2) Sets the "domain" DHCP option thereby potentially setting the
#    domain of all systems configured by DHCP
# 3) Provides the domain part for "expand-hosts"
<% if @domain && !@domain.empty? then -%>
<% @domain.each do |item| -%>
domain=<%= item %>
<% end -%>
<% else -%>
#domain=thekelleys.org.uk
<% end -%>

# Uncomment this to enable the integrated DHCP server, you need
# to supply the range of addresses available for lease and optionally
# a lease time. If you have more than one network, you will need to
# repeat this for each network on which you want to supply DHCP
# service.
<% if @dhcp_range && !@dhcp_range.empty? then -%>
<% @dhcp_range.each do |range| -%>
dhcp-range=<%= range %>
<% end -%>
<% else -%>
#dhcp-range=192.168.0.50,192.168.0.150,12h
<% end -%>

# Do router advertisements for all subnets where we're doing DHCPv6
# Unless overridden by ra-stateless, ra-names, et al, the router
# advertisements will have the M and O bits set, so that the clients
# get addresses and configuration from DHCPv6, and the A bit reset, so the
# clients don't use SLAAC addresses.
<% if @dhcp_enable_ra -%>
enable-ra
<%- else -%>
#enable-ra
<%- end -%>

# Supply parameters for specified hosts using DHCP. There are lots
# of valid alternatives, so we will give examples of each. Note that
# IP addresses DO NOT have to be in the range given above, they just
# need to be on the same network. The order of the parameters in these
# do not matter, it's permissible to give name, address and MAC in any
# order.

<% if @dhcp_host && !@dhcp_host.empty? then -%>
<% @dhcp_host.each do |host| -%>
dhcp-host=<%= host %>
<% end -%>
<% else -%>
#dhcp-host=11:22:33:44:55:66,192.168.0.60
<% end -%>

# Ignore any clients which are not specified in dhcp-host lines
# or /etc/ethers. Equivalent to ISC "deny unknown-clients".
# This relies on the special "known" tag which is set when
# a host is matched.
<% if @dhcp_ignore && !@dhcp_ignore.empty? then -%>
dhcp-ignore=<%= @dhcp_ignore.join(',') %>
<% else -%>
#dhcp-ignore=tag:!known
<% end -%>

# Send extra options which are tagged as "red" to any machine whose
# DHCP vendorclass string includes the substring "Linux"
<% if @dhcp_vendorclass && !@dhcp_vendorclass.empty? then -%>
<% @dhcp_vendorclass.each do |item| -%>
dhcp-vendorclass=<%= item %>
<% end -%>
<% else -%>
#dhcp-vendorclass=set:red,Linux
<% end -%>

# Send extra options which are tagged as "red" to any machine one
# of whose DHCP userclass strings includes the substring "accounts"
<% if @dhcp_userclass && !@dhcp_userclass.empty? then -%>
<% @dhcp_userclass.each do |item| -%>
dhcp-userclass=<%= item %>
<% end -%>
<% else -%>
#dhcp-userclass=set:red,accounts
<% end -%>

# Send extra options which are tagged as "red" to any machine whose
# MAC address matches the pattern.
<% if @dhcp_mac && !@dhcp_mac.empty? then -%>
<% @dhcp_mac.each do |item| -%>
dhcp-mac=<%= item %>
<% end -%>
<% else -%>
#dhcp-mac=set:red,00:60:8C:*:*:*
<% end -%>

# If this line is uncommented, dnsmasq will read /etc/ethers and act
# on the ethernet-address/IP pairs found there just as if they had
# been given as --dhcp-host options. Useful if you keep
# MAC-address/host mappings there for other purposes.
<% if @read_ethers -%>
read-ethers
<%- else -%>
#read-ethers
<%- end -%>

# Send options to hosts which ask for a DHCP lease.
# See RFC 2132 for details of available options.
# Common options can be given to dnsmasq by name:
# run "dnsmasq --help dhcp" to get a list.
# Note that all the common settings, such as netmask and
# broadcast address, DNS server and default route, are given
# sane defaults by dnsmasq. You very likely will not need
# any dhcp-options. If you use Windows clients and Samba, there
# are some options which are recommended, they are detailed at the
# end of this section.
<% if @dhcp_option && !@dhcp_option.empty? then -%>
<% @dhcp_option.each do |option| -%>
dhcp-option=<%= option %>
<% end -%>
<% else -%>
#dhcp-option=3,1.2.3.4
<% end -%>

# Send options to PXELinux. Note that we need to send the options even
# though they don't appear in the parameter request list, so we need
# to use dhcp-option-force here.
# See http://syslinux.zytor.com/pxe.php#special for details.
# Magic number - needed before anything else is recognised
<% if @dhcp_option_force && !@dhcp_option_force.empty? then -%>
<% @dhcp_option_force.each do |option| -%>
dhcp-option-force=<%= option %>
<% end -%>
<% else -%>
#dhcp-option-force=208,f1:00:74:7e
#dhcp-option-force=209,configs/common
#dhcp-option-force=210,/tftpboot/pxelinux/files/
#dhcp-option-force=211,30i
<% end -%>

# Set the boot filename for netboot/PXE. You will only need
# this if you want to boot machines over the network and you will need
# a TFTP server; either dnsmasq's built-in TFTP server or an
# external one. (See below for how to enable the TFTP server.)
<% if @dhcp_boot && !@dhcp_boot.empty? then -%>
<% @dhcp_boot.each do |item| -%>
dhcp-boot=<%= item %>
<% end -%>
<%- else -%>
#dhcp-boot=pxelinux.0
#dhcp-boot=pxelinux,server.name,192.168.1.100
#dhcp-boot=undionly.kpxe
#dhcp-match=set:ipxe,175 # iPXE sends a 175 option.
#dhcp-boot=tag:ipxe,http://boot.ipxe.org/demo/boot.php
<%- end -%>

# Encapsulated options for iPXE. All the options are
# encapsulated within option 175
#dhcp-option=encap:175, 1, 5b         # priority code
#dhcp-option=encap:175, 176, 1b       # no-proxydhcp
#dhcp-option=encap:175, 177, string   # bus-id
#dhcp-option=encap:175, 189, 1b       # BIOS drive code
#dhcp-option=encap:175, 190, user     # iSCSI username
#dhcp-option=encap:175, 191, pass     # iSCSI password

# Test for the architecture of a netboot client. PXE clients are
# supposed to send their architecture as option 93. (See RFC 4578)
<%- if @dhcp_match && !@dhcp_match.empty? then -%>
<% @dhcp_match.each do |item| -%>
dhcp-match=<%= item %>
<% end -%>
<%- else -%>
#dhcp-match=peecees, option:client-arch, 0 #x86-32
#dhcp-match=itanics, option:client-arch, 2 #IA64
#dhcp-match=hammers, option:client-arch, 6 #x86-64
#dhcp-match=mactels, option:client-arch, 7 #EFI x86-64
<%- end -%>

# Do real PXE, rather than just booting a single file, this is an
# alternative to dhcp-boot.
<% if @pxe_prompt -%>
pxe-prompt=<%= @pxe_prompt -%>
<%- else -%>
#pxe-prompt="What system shall I netboot?"
# or with timeout before first available action is taken:
#pxe-prompt="Press F8 for menu.", 60
<% end -%>

# Available boot services. for PXE.
<%- if @pxe_service && !@pxe_service.empty? then -%>
<% @pxe_service.each do |item| -%>
pxe-service=<%= item -%>
<% end %>
<% end -%>

# If you have multicast-FTP available,
# information for that can be passed in a similar way using options 1
# to 5. See page 19 of
# http://download.intel.com/design/archives/wfm/downloads/pxespec.pdf


# Enable dnsmasq's built-in TFTP server
<%- if @enable_tftp && !@enable_tftp.empty? then -%>
<% @enable_tftp.each do |item| -%>
<%= item -%>
<% end %>
<%- else -%>
#enable-tftp
<% end -%>

# Set the root directory for files available via FTP.
<% if @tftp_root -%>
tftp-root=<%= @tftp_root %>
<% else -%>
#tftp-root=/var/ftpd
<% end -%>

# Do not abort if the tftp-root is unavailable
<% if @tftp_no_fail -%>
tftp-no-fail
<% else -%>
#tftp-no-fail
<% end -%>

# Make the TFTP server more secure: with this set, only files owned by
# the user dnsmasq is running as will be send over the net.
<% if @tftp_secure -%>
tftp-secure
<% else -%>
#tftp-secure
<% end -%>

# This option stops dnsmasq from negotiating a larger blocksize for TFTP
# transfers. It will slow things down, but may rescue some broken TFTP
# clients.
<% if @tftp_no_blocksize -%>
tftp-no-blocksize
<% else -%>
#tftp-no-blocksize
<% end -%>

# Set the limit on DHCP leases, the default is 150
<% if @dhcp_lease_max -%>
dhcp-lease-max=<%= @dhcp_lease_max %>
<% else -%>
#dhcp-lease-max=150
<% end -%>

# The DHCP server needs somewhere on disk to keep its lease database.
# This defaults to a sane location, but if you want to change it, use
# the line below.
<% if @dhcp_leasefile -%>
dhcp-leasefile=<%= @dhcp_leasefile %>
<% else -%>
#dhcp-leasefile=/var/lib/misc/dnsmasq.leases
<% end -%>

# Set the DHCP server to authoritative mode. In this mode it will barge in
# and take over the lease for any client which broadcasts on the network,
# whether it has a record of the lease or not. This avoids long timeouts
# when a machine wakes up on a new network. DO NOT enable this if there's
# the slightest chance that you might end up accidentally configuring a DHCP
# server for your campus/company accidentally. The ISC server uses
# the same option, and this URL provides more information:
# http://www.isc.org/files/auth.html
<% if @dhcp_authoritative -%>
dhcp-authoritative
<% else -%>
#dhcp-authoritative
<% end -%>

# Set the DHCP server to enable DHCPv4 Rapid Commit Option per RFC 4039.
# In this mode it will respond to a DHCPDISCOVER message including a Rapid Commit
# option with a DHCPACK including a Rapid Commit option and fully committed address
# and configuration information. This must only be enabled if either the server is
# the only server for the subnet, or multiple servers are present and they each
# commit a binding for all clients.
<% if @dhcp_rapid_commit -%>
dhcp-rapid-commit
<% else -%>
#dhcp-rapid-commit
<% end -%>

# Run an executable when a DHCP lease is created or destroyed.
# The arguments sent to the script are "add" or "del",
# then the MAC address, the IP address and finally the hostname
# if there is one.
<% if @dhcp_script -%>
dhcp-script=<%= @dhcp_script %>
<% else -%>
#dhcp-script=/bin/echo
<% end -%>

# Set the cachesize here.
<% if @cache_size -%>
cache-size=<%= @cache_size %>
<% else -%>
#cache-size=150
<% end -%>

# If you want to disable negative caching, uncomment this.
# Set the cachesize here.
<% if @no_negcache -%>
no-negcache
<% else -%>
#no-negcache
<% end -%>

# Normally responses which come from /etc/hosts and the DHCP lease
# file have Time-To-Live set as zero, which conventionally means
# do not cache further. If you are happy to trade lower load on the
# server for potentially stale date, you can set a time-to-live (in
# seconds) here.
<% if @local_ttl -%>
local-ttl=<%= @local_ttl %>
<% else -%>
#local-ttl=
<% end -%>

# If you want dnsmasq to detect attempts by Verisign to send queries
# to unregistered .com and .net hosts to its sitefinder service and
# have dnsmasq instead return the correct NXDOMAIN response, uncomment
# this line. You can add similar lines to do the same for other
# registries which have implemented wildcard A records.
<%- if @bogus_nxdomain && !@bogus_nxdomain.empty? then -%>
<% @bogus_nxdomain.each do |item| -%>
bogus-nxdomain=<%= item %>
<% end -%>
<% else -%>
#bogus-nxdomain=64.94.110.11
<% end -%>

# If you want to fix up DNS results from upstream servers, use the
# alias option. This only works for IPv4.
<%- if @dns_alias && !@dns_alias.empty? then -%>
<% @dns_alias.each do |item| -%>
alias=<%= item %>
<% end -%>
<% else -%>
#alias=1.2.3.4,5.6.7.8
#alias=1.2.3.0,5.6.7.0,255.255.255.0
#alias=192.168.0.10-192.168.0.40,10.0.0.0,255.255.255.0
<% end -%>

# Change these lines if you want dnsmasq to serve MX records.

<% if @mx_host && !@mx_host.empty? then -%>
<% @mx_host.each do |item| -%>
mx-host=<%= item %>
<% end -%>
<% else -%>
# Return an MX record named "maildomain.com" with target
# servermachine.com and preference 50
#mx-host=maildomain.com,servermachine.com,50
<% end -%>

# Set the default target for MX records created using the localmx option.
<% if @mx_target -%>
mx-target=<%= @mx_target %>
<% else -%>
#mx-target=servermachine.com
<% end -%>

# Return an MX record pointing to the mx-target for all local
# machines.
<% if @localmx -%>
localmx
<% else -%>
#localmx
<% end -%>

# Return an MX record pointing to itself for all local machines.
<% if @selfmx -%>
selfmx
<% else -%>
#selfmx
<% end -%>

# Change the following lines if you want dnsmasq to serve SRV
# records.  These are useful if you want to serve ldap requests for
# Active Directory and other windows-originated DNS requests.
# See RFC 2782.
# You may add multiple srv-host lines.
# The fields are <name>,<target>,<port>,<priority>,<weight>
# If the domain part if missing from the name (so that is just has the
# service and protocol sections) then the domain given by the domain=
# config option is used. (Note that expand-hosts does not need to be
# set for this to work.)

# A SRV record sending LDAP for the example.com domain to
# ldapserver.example.com port 389
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389

# A SRV record sending LDAP for the example.com domain to
# ldapserver.example.com port 389 (using domain=)
#domain=example.com
#srv-host=_ldap._tcp,ldapserver.example.com,389

# Two SRV records for LDAP, each with different priorities
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,1
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,2

# A SRV record indicating that there is no LDAP server for the domain
# example.com
#srv-host=_ldap._tcp.example.com

<%- if @dns_srv_host && !@dns_srv_host.empty? then -%>
<% @dns_srv_host.each do |item| -%>
srv-host=<%= item %>
<% end -%>
<% end -%>

# The following line shows how to make dnsmasq serve an arbitrary PTR
# record. This is useful for DNS-SD. (Note that the
# domain-name expansion done for SRV records _does_not
# occur for PTR records.)
<% if @ptr_record -%>
ptr-record=<%= @ptr_record %>
<% else -%>
#ptr-record=_http._tcp.dns-sd-services,"New Employee Page._http._tcp.dns-sd-services"
<% end -%>

# Change the following lines to enable dnsmasq to serve TXT records.
# These are used for things like SPF and zeroconf. (Note that the
# domain-name expansion done for SRV records _does_not
# occur for TXT records.)

#Example SPF.
#txt-record=example.com,"v=spf1 a -all"

#Example zeroconf
#txt-record=_http._tcp.example.com,name=value,paper=A4

<%- if @txt_record && !@txt_record.empty? then -%>
<% @txt_record.each do |item| -%>
txt-record=<%= item %>
<% end -%>
<% end -%>

# Provide an alias for a "local" DNS name. Note that this _only_ works
# for targets which are names from DHCP or /etc/hosts. Give host
# "bert" another name, bertrand
<%- if @dns_cname && !@dns_cname.empty? then -%>
<% @dns_cname.each do |item| -%>
cname=<%= item %>
<% end -%>
<% else -%>
#cname=bertand,bert
<% end -%>

# For debugging purposes, log each DNS query as it passes through
# dnsmasq.
<% if @log_queries then -%>
<% if @log_queries == 'extra' then -%>
log-queries=<%= @log_queries %>
<% else -%>
log-queries
<% end -%>
<% else -%>
#log-queries
<% end -%>

# Log lots of extra information about DHCP transactions.
<% if @log_dhcp -%>
log-dhcp
<% else -%>
#log-dhcp
<% end -%>

# If a DHCP client claims that its name is "wpad", ignore that.
# This fixes a security hole. see CERT Vulnerability VU#598349
#dhcp-name-match=set:wpad-ignore,wpad
#dhcp-ignore-names=tag:wpad-ignore
<%- if @dhcp_name_match && !@dhcp_name_match.empty? then -%>
<% @dhcp_name_match.each do |item| -%>
dhcp-name-match=<%= item %>
<% end -%>
<% end -%>

<% if @dhcp_ignore_names then -%>
<%= @dhcp_ignore_names %>
<% end -%>

